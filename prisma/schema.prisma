// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model UsersAccount {
  id         String       @id @default(dbgenerated("uuid()")) @map("id") @db.VarChar(36)
  username   String       @map("user_name")
  email      String       @unique
  password   String
  createdAt  DateTime     @default(now()) @map("created_at")
  updatedAt  DateTime?    @updatedAt @map("updated_at")
  deleted    Int          @default(0) @map("deleted") @db.TinyInt()
  userAccess UserAccess[]
  otp        Otp?
  loginDevice LoginDevice[]

  @@map("users_account")
}

model UserAccess {
  id            Int          @id @default(autoincrement()) @map("id")
  accessToken   String?      @unique @map("access_token")
  rememberMe    Int          @default(0) @map("remember_me") @db.TinyInt()
  userAccountId String       @map("user_account_id")
  userAcount    UsersAccount @relation(fields: [userAccountId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("users_access")
}

model LoginDevice {
  id            Int          @id @default(autoincrement()) @map("id")
  deviceName    String       @map("device_name")
  userAccountId String       @map("user_account_id")
  userAcount    UsersAccount @relation(fields: [userAccountId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  @@map("login_device")
}

model Otp {
  id            Int          @id @default(autoincrement()) @map("id")
  otp           String?
  userAccountId String       @unique @map("user_account_id")
  userAcount    UsersAccount @relation(fields: [userAccountId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}
